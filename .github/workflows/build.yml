on:
  push: {}

name: Build

env:
  PYTHONIOENCODING: utf-8

jobs:
  build:
    name: Build
    runs-on: windows-2019
    steps:
      - name: Check out sources
        uses: actions/checkout@v3
      - name: Get Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          architecture: ${{ matrix.CI_ARCH }}
      - uses: actions/cache@v3
        id: cache-deps
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ matrix.CI_ARCH }}-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
           ${{ runner.os }}-venv-${{ matrix.CI_ARCH }}
      - name: Setup dependencies
        run: |
          python -m venv venv
          venv/scripts/activate
          pip install -r requirements-dev.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'
      - name: Build code
        run: |
          venv/scripts/activate
          invoke freeze
          invoke copy-executables
          invoke make-installer
      - name: Upload portable build
        uses: actions/upload-artifact@v3
        with:
          name: Bookworm-portable-${{ matrix.CI_ARCH }}
          path: scripts/builder/dist/${{ matrix.CI_ARCH }}/Bookworm
      - name: Upload installer
        uses: actions/upload-artifact@v3
        with:
          name: Bookworm-setup-${{ matrix.CI_ARCH }}
          path: scripts/Bookworm*setup.exe
    strategy:
     matrix:
       CI_ARCH: ["x86", "x64"]
  
  deploy:
    runs-on: ubuntu-22.04
    needs: ["build"]
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: ~/artifacts
      - name: Release
        if: startsWith(github.ref, 'refs/tags') && !github.event_type != 'pull_request'
        uses: ncipollo/release-action@v1
        with:
          artifacts: "/home/runner/artifacts/*"
          draft: true
          generateReleaseNotes: true
